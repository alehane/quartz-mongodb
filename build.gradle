buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.7.3"
    id 'com.sourcemuse.mongo' version '1.0.6'
}

allprojects {
  repositories {
    jcenter()
  }
  apply plugin: 'maven'
  apply plugin: 'maven-publish'
  apply plugin: 'java'
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'com.sourcemuse.mongo'

jar {
    baseName = 'quartz-mongodb'
    version =  version
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
    compile.extendsFrom provided
}
sourceSets {
    main { compileClasspath += configurations.provided }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}
dependencies {
    compile("org.quartz-scheduler:quartz:2.2.3")
    compile("org.mongodb:mongodb-driver:3.11.0")
    compile("commons-codec:commons-codec:1.13")
    compile("org.slf4j:slf4j-api:1.7.28")

    compileOnly("org.clojure:clojure:1.10.1")

    testCompile("org.clojure:clojure:1.10.1")
    testCompile("joda-time:joda-time:2.10.4")
    testCompile("org.slf4j:slf4j-simple:1.7.28")
    testCompile("org.codehaus.groovy:groovy-all:2.4.1")
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4")
    testRuntime("cglib:cglib-nodep:3.3.0")
    testRuntime("org.objenesis:objenesis:3.0.1")
}

release {
    scmAdapters = [net.researchgate.release.GitAdapter]
    git {
        pushToRemote = 'origin'
    }
}

task sourceJar(type: Jar) {
    dependsOn classes
    classifier "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

artifacts {
    archives sourceJar
    archives javadocJar
}


publishing {
    publications {
        QuartzMongoDB(MavenPublication) {
            from components.java
            groupId 'com.novemberain'
            artifactId(jar.baseName)
            version(projectVersion)

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

mongo {
    port 12345
    logging 'console'
}

test {
 beforeTest { descriptor ->
    logger.lifecycle("Running test \"${descriptor}\"")
 }
}

// force test runs even when there are no test changes,
// such test loops are very useful for testing race conditions
// and other concurrency hazards
test.outputs.upToDateWhen { false }

tasks.withType(Test){
    runWithMongoDb = true
    mongo {
        journalingEnabled true
        port 12345
        logging 'console'
        mongoVersion '3.6.10'
    }
}

bintray {
    user = System.getenv("BINTRAY_USERNAME")
    key  = System.getenv("BINTRAY_API_KEY")
    publications = ['QuartzMongoDB']
    pkg {
        repo = 'maven'
        name = 'quartz-mongodb'
        labels = ['quartz', 'mongodb']
        userOrg = 'michaelklishin'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/michaelklishin/quartz-mongodb.git'

        version {
            name = projectVersion
            desc = 'MongoDB-backed job store for the Quartz scheduler'
            vcsTag = projectVersion
        }
    }
}
